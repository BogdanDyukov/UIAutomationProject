{"uid":"7d5dbca553bb6325","name":"Смена last name на Bogdan_last","fullName":"tests.profile_functions_test.TestProfileFunctions#test_change_profile_last_name","historyId":"ca3977b4b5c3cabd8c9aff3d857831db","time":{"start":1751016684400,"stop":1751016685593,"duration":1193},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-10d463b7=\"\" data-v-6653c066=\"\" type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\">...</button> is not clickable at point (1787, 709). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\n  (Session info: chrome=138.0.7204.49)\nStacktrace:\n#0 0x55e89b9dc26a <unknown>\n#1 0x55e89b486ab0 <unknown>\n#2 0x55e89b4df55c <unknown>\n#3 0x55e89b4dd3f4 <unknown>\n#4 0x55e89b4daa62 <unknown>\n#5 0x55e89b4da180 <unknown>\n#6 0x55e89b4cc90a <unknown>\n#7 0x55e89b4fe1a2 <unknown>\n#8 0x55e89b4cc28a <unknown>\n#9 0x55e89b4fe36e <unknown>\n#10 0x55e89b523fee <unknown>\n#11 0x55e89b4fdf73 <unknown>\n#12 0x55e89b4caaeb <unknown>\n#13 0x55e89b4cb751 <unknown>\n#14 0x55e89b9a0b7b <unknown>\n#15 0x55e89b9a4959 <unknown>\n#16 0x55e89b987959 <unknown>\n#17 0x55e89b9a5518 <unknown>\n#18 0x55e89b96c10f <unknown>\n#19 0x55e89b9c9918 <unknown>\n#20 0x55e89b9c9af6 <unknown>\n#21 0x55e89b9db586 <unknown>\n#22 0x7f4c0e4b71f5 <unknown>","statusTrace":"self = <profile_functions_test.TestProfileFunctions object at 0x7fe51a545a30>\nnew_last_name = 'Bogdan_last'\n\n    @allure.feature(\"Редактирование профиля\")\n    @allure.story(\"Изменение ФИО пользователя\")\n    @allure.title(\"Смена last name на {new_last_name}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.parametrize(\"new_last_name\", [ProfileData.LAST_NAME])\n    def test_change_profile_last_name(self, new_last_name):\n        with allure.step(f\"Помещаем в текстовое поле значение {new_last_name}\"):\n            self.my_info_page.update_last_name_field(new_last_name)\n    \n        with allure.step(\"Сохраняем изменения\"):\n>           self.my_info_page.click_save_button()\n\ntests/profile_functions_test.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/my_info_page.py:40: in click_save_button\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON_LOCATOR)).click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe51b1a5700>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e89b9c9af6 \\\\u003Cunknown>\\\\n#21 0x55e89b9db586 \\\\u003Cunknown>\\\\n#22 0x7f4c0e4b71f5 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-10d463b7=\"\" data-v-6653c066=\"\" type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\">...</button> is not clickable at point (1787, 709). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\nE         (Session info: chrome=138.0.7204.49)\nE       Stacktrace:\nE       #0 0x55e89b9dc26a <unknown>\nE       #1 0x55e89b486ab0 <unknown>\nE       #2 0x55e89b4df55c <unknown>\nE       #3 0x55e89b4dd3f4 <unknown>\nE       #4 0x55e89b4daa62 <unknown>\nE       #5 0x55e89b4da180 <unknown>\nE       #6 0x55e89b4cc90a <unknown>\nE       #7 0x55e89b4fe1a2 <unknown>\nE       #8 0x55e89b4cc28a <unknown>\nE       #9 0x55e89b4fe36e <unknown>\nE       #10 0x55e89b523fee <unknown>\nE       #11 0x55e89b4fdf73 <unknown>\nE       #12 0x55e89b4caaeb <unknown>\nE       #13 0x55e89b4cb751 <unknown>\nE       #14 0x55e89b9a0b7b <unknown>\nE       #15 0x55e89b9a4959 <unknown>\nE       #16 0x55e89b987959 <unknown>\nE       #17 0x55e89b9a5518 <unknown>\nE       #18 0x55e89b96c10f <unknown>\nE       #19 0x55e89b9c9918 <unknown>\nE       #20 0x55e89b9c9af6 <unknown>\nE       #21 0x55e89b9db586 <unknown>\nE       #22 0x7f4c0e4b71f5 <unknown>\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_class_scope","time":{"start":1751016674343,"stop":1751016674623,"duration":280},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_state","time":{"start":1751016674623,"stop":1751016679954,"duration":5331},"status":"passed","steps":[{"name":"Логинимся в системе","time":{"start":1751016674623,"stop":1751016677982,"duration":3359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим на страницу профиля","time":{"start":1751016677982,"stop":1751016679954,"duration":1972},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"initialize_my_info_page","time":{"start":1751016674623,"stop":1751016674623,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-10d463b7=\"\" data-v-6653c066=\"\" type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\">...</button> is not clickable at point (1787, 709). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\n  (Session info: chrome=138.0.7204.49)\nStacktrace:\n#0 0x55e89b9dc26a <unknown>\n#1 0x55e89b486ab0 <unknown>\n#2 0x55e89b4df55c <unknown>\n#3 0x55e89b4dd3f4 <unknown>\n#4 0x55e89b4daa62 <unknown>\n#5 0x55e89b4da180 <unknown>\n#6 0x55e89b4cc90a <unknown>\n#7 0x55e89b4fe1a2 <unknown>\n#8 0x55e89b4cc28a <unknown>\n#9 0x55e89b4fe36e <unknown>\n#10 0x55e89b523fee <unknown>\n#11 0x55e89b4fdf73 <unknown>\n#12 0x55e89b4caaeb <unknown>\n#13 0x55e89b4cb751 <unknown>\n#14 0x55e89b9a0b7b <unknown>\n#15 0x55e89b9a4959 <unknown>\n#16 0x55e89b987959 <unknown>\n#17 0x55e89b9a5518 <unknown>\n#18 0x55e89b96c10f <unknown>\n#19 0x55e89b9c9918 <unknown>\n#20 0x55e89b9c9af6 <unknown>\n#21 0x55e89b9db586 <unknown>\n#22 0x7f4c0e4b71f5 <unknown>","statusTrace":"self = <profile_functions_test.TestProfileFunctions object at 0x7fe51a545a30>\nnew_last_name = 'Bogdan_last'\n\n    @allure.feature(\"Редактирование профиля\")\n    @allure.story(\"Изменение ФИО пользователя\")\n    @allure.title(\"Смена last name на {new_last_name}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.parametrize(\"new_last_name\", [ProfileData.LAST_NAME])\n    def test_change_profile_last_name(self, new_last_name):\n        with allure.step(f\"Помещаем в текстовое поле значение {new_last_name}\"):\n            self.my_info_page.update_last_name_field(new_last_name)\n    \n        with allure.step(\"Сохраняем изменения\"):\n>           self.my_info_page.click_save_button()\n\ntests/profile_functions_test.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/my_info_page.py:40: in click_save_button\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON_LOCATOR)).click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe51b1a5700>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e89b9c9af6 \\\\u003Cunknown>\\\\n#21 0x55e89b9db586 \\\\u003Cunknown>\\\\n#22 0x7f4c0e4b71f5 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-10d463b7=\"\" data-v-6653c066=\"\" type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\">...</button> is not clickable at point (1787, 709). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\nE         (Session info: chrome=138.0.7204.49)\nE       Stacktrace:\nE       #0 0x55e89b9dc26a <unknown>\nE       #1 0x55e89b486ab0 <unknown>\nE       #2 0x55e89b4df55c <unknown>\nE       #3 0x55e89b4dd3f4 <unknown>\nE       #4 0x55e89b4daa62 <unknown>\nE       #5 0x55e89b4da180 <unknown>\nE       #6 0x55e89b4cc90a <unknown>\nE       #7 0x55e89b4fe1a2 <unknown>\nE       #8 0x55e89b4cc28a <unknown>\nE       #9 0x55e89b4fe36e <unknown>\nE       #10 0x55e89b523fee <unknown>\nE       #11 0x55e89b4fdf73 <unknown>\nE       #12 0x55e89b4caaeb <unknown>\nE       #13 0x55e89b4cb751 <unknown>\nE       #14 0x55e89b9a0b7b <unknown>\nE       #15 0x55e89b9a4959 <unknown>\nE       #16 0x55e89b987959 <unknown>\nE       #17 0x55e89b9a5518 <unknown>\nE       #18 0x55e89b96c10f <unknown>\nE       #19 0x55e89b9c9918 <unknown>\nE       #20 0x55e89b9c9af6 <unknown>\nE       #21 0x55e89b9db586 <unknown>\nE       #22 0x7f4c0e4b71f5 <unknown>\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Помещаем в текстовое поле значение Bogdan_last","time":{"start":1751016684400,"stop":1751016684522,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Сохраняем изменения","time":{"start":1751016684522,"stop":1751016685592,"duration":1070},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-10d463b7=\"\" data-v-6653c066=\"\" type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\">...</button> is not clickable at point (1787, 709). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\n  (Session info: chrome=138.0.7204.49)\nStacktrace:\n#0 0x55e89b9dc26a <unknown>\n#1 0x55e89b486ab0 <unknown>\n#2 0x55e89b4df55c <unknown>\n#3 0x55e89b4dd3f4 <unknown>\n#4 0x55e89b4daa62 <unknown>\n#5 0x55e89b4da180 <unknown>\n#6 0x55e89b4cc90a <unknown>\n#7 0x55e89b4fe1a2 <unknown>\n#8 0x55e89b4cc28a <unknown>\n#9 0x55e89b4fe36e <unknown>\n#10 0x55e89b523fee <unknown>\n#11 0x55e89b4fdf73 <unknown>\n#12 0x55e89b4caaeb <unknown>\n#13 0x55e89b4cb751 <unknown>\n#14 0x55e89b9a0b7b <unknown>\n#15 0x55e89b9a4959 <unknown>\n#16 0x55e89b987959 <unknown>\n#17 0x55e89b9a5518 <unknown>\n#18 0x55e89b96c10f <unknown>\n#19 0x55e89b9c9918 <unknown>\n#20 0x55e89b9c9af6 <unknown>\n#21 0x55e89b9db586 <unknown>\n#22 0x7f4c0e4b71f5 <unknown>\n\n","statusTrace":"  File \"/usr/workspace/tests/profile_functions_test.py\", line 77, in test_change_profile_last_name\n    self.my_info_page.click_save_button()\n  File \"/usr/workspace/pages/my_info_page.py\", line 40, in click_save_button\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON_LOCATOR)).click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 121, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 574, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver_class_scope::0","time":{"start":1751016685648,"stop":1751016685718,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Редактирование профиля"},{"name":"story","value":"Изменение ФИО пользователя"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"profile_functions_test"},{"name":"subSuite","value":"TestProfileFunctions"},{"name":"host","value":"e843a3036c6d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.profile_functions_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_last_name","value":"'Bogdan_last'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"7d5dbca553bb6325.json","parameterValues":["'Bogdan_last'"]}